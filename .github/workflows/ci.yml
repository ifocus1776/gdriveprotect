name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pytest
        
    - name: Build Docker image
      run: |
        docker build -t gdriveprotect .
        
    - name: Start container
      run: |
        docker run -d \
          --name gdriveprotect-test \
          -p 5000:5000 \
          -e GOOGLE_CLOUD_PROJECT=test-project \
          gdriveprotect
          
    - name: Wait for container
      run: |
        timeout 60 bash -c 'until curl -s http://localhost:5000/api/dlp/health; do sleep 5; done'
        
    - name: Run API tests
      run: |
        python tests/test_api_endpoints.py
        
    - name: Run performance tests
      run: |
        echo "Testing response times..."
        for endpoint in "/api/dlp/health" "/api/drive/health" "/api/vault/health"; do
          echo "Testing $endpoint"
          curl -w "Time: %{time_total}s\n" -o /dev/null -s "http://localhost:5000$endpoint"
        done
        
    - name: Check container logs
      if: failure()
      run: |
        docker logs gdriveprotect-test --tail 50
        
    - name: Cleanup
      if: always()
      run: |
        docker stop gdriveprotect-test || true
        docker rm gdriveprotect-test || true
        
  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Security scan
      run: |
        echo "Running security checks..."
        # Add security scanning tools here
        # Example: bandit, safety, etc.
        
  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build and push Docker image
      run: |
        echo "Building production image..."
        docker build -t gdriveprotect:latest .
        
    - name: Create release
      if: github.event_name == 'push'
      run: |
        echo "Creating release..."
        # Add release creation logic here
